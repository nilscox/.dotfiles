// prettier-ignore
[
  // cursor movement
  // ---------------

  // subword
  { "key": "alt+left", "command": "cursorWordPartLeft" },
  { "key": "alt+right", "command": "cursorWordPartRight" },

  // subword with selection
  { "key": "shift+alt+left", "command": "cursorWordPartLeftSelect" },
  { "key": "shift+alt+right", "command": "cursorWordPartRightSelect" },

  // line start / end
  { "key": "ctrl+alt+left", "command": "cursorHome", "when": "textInputFocus" },
  { "key": "ctrl+alt+right", "command": "cursorEnd", "when": "textInputFocus" },

  // line start / end with selection
  { "key": "ctrl+shift+alt+left", "command": "cursorHomeSelect", "when": "textInputFocus" },
  { "key": "ctrl+shift+alt+right", "command": "cursorEndSelect", "when": "textInputFocus" },

  // previous / next empty line
  { "key": "alt+up", "command": "cursorMove", "args": { "to": "prevBlankLine", "by": "wrappedLine" } },
  { "key": "alt+down", "command": "cursorMove", "args": { "to": "nextBlankLine", "by": "wrappedLine" } },
  { "key": "alt+shift+up", "command": "cursorMove", "args": { "to": "prevBlankLine", "select": true } },
  { "key": "alt+shift+down", "command": "cursorMove", "args": { "to": "nextBlankLine", "select": true } },

  // file start / end
  { "key": "home", "command": "cursorTop", "when": "textInputFocus" },
  { "key": "end", "command": "cursorBottom", "when": "textInputFocus" },

  // file start / end with selection
  { "key": "shift+home", "command": "cursorTopSelect", "when": "textInputFocus" },
  { "key": "shift+end", "command": "cursorBottomSelect", "when": "textInputFocus" },

  // text manipulation
  // -----------------

  // move line up / down
  { "key": "ctrl+shift+up", "command": "editor.action.moveLinesUpAction", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+shift+down", "command": "editor.action.moveLinesDownAction", "when": "editorTextFocus && !editorReadonly" },

  // duplicate / delete line
  { "key": "ctrl+e", "command": "editor.action.copyLinesDownAction", "when": "editorTextFocus" },
  { "key": "ctrl+e", "command": "editor.action.duplicateSelection", "when": "editorTextFocus && editorHasSelection" },
  { "key": "ctrl+alt+e", "command": "editor.action.deleteLines", "when": "editorTextFocus" },

  // copy / cut / paste
  { "key": "ctrl+c", "command": "clipboard.copy", "when": "editorTextFocus" },
  { "key": "ctrl+x", "command": "clipboard.cut", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+v", "command": "clipboard.paste", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+shift+v", "command": "clipboard.pasteFromClipboard", "when": "editorTextFocus && !editorReadonly" },

  // multi cursor
  // ------------

  // duplicate cursor up / down
  { "key": "ctrl+alt+up", "command": "editor.action.insertCursorAbove", "when": "editorTextFocus" },
  { "key": "ctrl+alt+down", "command": "editor.action.insertCursorBelow", "when": "editorTextFocus" },

  // selection
  // ---------

  // select next occurence
  { "key": "ctrl+l", "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
  { "key": "ctrl+shift+l", "command": "editor.action.moveSelectionToNextFindMatch", "when": "editorFocus" },

  // select prev occurence
  { "key": "alt+l", "command": "editor.action.addSelectionToPreviousFindMatch", "when": "editorFocus" },
  { "key": "alt+shift+l", "command": "editor.action.moveSelectionToPreviousFindMatch", "when": "editorFocus" },

  // select all occurences
  { "key": "ctrl+alt+shift+l", "command": "editor.action.selectHighlights", "when": "editorFocus" },

  // expand / shrink selection
  { "key": "ctrl+=", "command": "editor.action.smartSelect.expand", "when": "editorTextFocus" },
  { "key": "ctrl+/", "command": "editor.action.smartSelect.shrink", "when": "editorTextFocus" },

  { "key": "alt+'", "command": "extension.selectSingleQuote" },
  { "key": "alt+shift+'", "command": "extension.selectDoubleQuote" },

  // todo
  { "key": "alt+; ;", "command": "extension.selectEitherQuote" },
  { "key": "alt+; q", "command": "extension.switchQuotes" },

  { "key": "alt+; `", "command": "extension.selectBackTick" },

  { "key": "alt+shift+9", "command": "extension.selectParenthesis" },
  { "key": "alt+shift+0", "command": "extension.selectParenthesisOuter" },

  { "key": "alt+[", "command": "extension.selectSquareBrackets" },
  { "key": "alt+]", "command": "extension.selectSquareBracketsOuter" },

  { "key": "alt+shift+[", "command": "extension.selectCurlyBrackets" },
  { "key": "alt+shift+]", "command": "extension.selectCurlyBracketsOuter" },

  // { "key": "", "command": "extension.selectAngleBrackets" },
  // { "key": "", "command": "extension.selectInTag" },

  // edition
  // -------

  // snippets
  { "key": "alt+q q", "command": "editor.action.showSnippets" },
  { "key": "alt+q l", "command": "editor.action.insertSnippet", "args": { "name": "console log" } },
  { "key": "alt+q l", "command": "editor.action.insertSnippet", "args": { "name": "echo" } },
  { "key": "alt+q f", "command": "editor.action.insertSnippet", "args": { "name": "fc" } },
  { "key": "alt+q n", "command": "editor.action.insertSnippet", "args": { "name": "fc no props" } },
  { "key": "alt+q r", "command": "editor.action.insertSnippet", "args": { "name": "import react" } },
  { "key": "alt+q i", "command": "editor.action.insertSnippet", "args": { "name": "import" } },
  { "key": "alt+q w", "command": "editor.action.insertSnippet", "args": { "name": "wrap" } },
  { "key": "alt+q s", "command": "editor.action.insertSnippet", "args": { "name": "react use state" } },
  { "key": "alt+q p", "command": "editor.action.insertSnippet", "args": { "name": "wait" } },
  { "key": "alt+q h", "command": "editor.action.insertSnippet", "args": { "name": "html" } },

  // actions
  // -------

  // save
  { "key": "alt+enter", "command": "workbench.action.files.save" },
  { "key": "alt+shift+enter", "command": "workbench.action.files.saveAs" },
  { "key": "alt+ctrl+enter", "command": "workbench.action.files.saveWithoutFormatting" },
  { "key": "ctrl+alt+shift+enter", "command": "workbench.action.files.saveAll" },

  // undo / redo
  { "key": "ctrl+z", "command": "undo" },
  { "key": "ctrl+alt+z", "command": "cursorUndo" },
  { "key": "ctrl+shift+z", "command": "redo" },

  // toggle ui elements
  { "key": "alt+p", "command": "workbench.action.togglePanel" },
  { "key": "alt+s", "command": "workbench.action.toggleSidebarVisibility" },
  { "key": "alt+m", "command": "editor.action.toggleMinimap" },
  { "key": "alt+b", "command": "breadcrumbs.toggle" },

  // imports
  { "key": "alt+a", "command": "editor.action.organizeImports" },
  { "key": "alt+shift+a", "command": "editor.action.sourceAction", "args": { "kind": "source.addMissingImports", "apply": "first" } },

  { "key": "alt+z", "command": "gitlens.toggleZenMode" },

  // tabs
  // ----

  // close / reopen tab
  { "key": "ctrl+w", "command": "workbench.action.closeActiveEditor" },
  { "key": "ctrl+shift+w", "command": "workbench.action.reopenClosedEditor" },

  // close all
  { "key": "ctrl+alt+w", "command": "workbench.action.closeOtherEditors" },
  { "key": "ctrl+alt+shift+w", "command": "workbench.action.closeAllEditors" },

  // files
  // -----

  // open files
  { "key": "ctrl+o", "command": "workbench.action.quickOpen" },
  { "key": "ctrl+shift+o", "command": "workbench.action.files.openFolderInNewWindow" },
  { "key": "ctrl+alt+o", "command": "workbench.action.files.openFile" },
  { "key": "alt+o", "command": "workbench.action.openRecent" },

  // create new file
  { "key": "ctrl+n", "command": "workbench.action.files.newUntitledFile" },

  // files manipulation
  { "key": "ctrl+r", "command": "fileutils.renameFile" },
  { "key": "ctrl+m", "command": "fileutils.moveFile" },
  { "key": "ctrl+d", "command": "fileutils.duplicateFile" },
  { "key": "ctrl+shift+d", "command": "fileutils.removeFile" },

  // copy file name / path
  { "key": "ctrl+alt+c", "command": "fileutils.copyFileName" },
  { "key": "ctrl+alt+shift+c", "command": "copyRelativeFilePath" },

  // misc
  // ----

  // command palette
  { "key": "alt+,", "command": "workbench.action.showCommands" },

  // toggle full screen
  { "key": "F11", "command": "workbench.action.toggleFullScreen" },

  // settings / keybindings
  { "key": "ctrl+p", "command": "workbench.action.openSettingsJson" },
  { "key": "ctrl+alt+p", "command": "workbench.action.openGlobalKeybindingsFile" },

  // snippet

  // comment / uncomment
  { "key": "alt+\\", "command": "editor.action.commentLine" },
  { "key": "alt+shift+\\", "command": "editor.action.blockComment" },

  // show autocomplete
  { "key": "ctrl+space", "command": "editor.action.triggerSuggest", "when": "editorHasCompletionItemProvider && editorTextFocus && !editorReadonly" },

  // show documentation
  { "key": "ctrl+shift+space", "command": "editor.action.showHover", "when": "editorTextFocus" },
  { "key": "ctrl+alt+shift+space", "command": "editor.action.triggerParameterHints", "when": "editorHasSignatureHelpProvider && editorTextFocus" },

  // format
  { "key": "alt+space", "command": "editor.action.formatDocument", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
  { "key": "alt+shift+space", "command": "eslint.executeAutofix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },

  // fix
  { "key": "ctrl+alt+space", "command": "editor.action.quickFix", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },

  // zoom in / out
  // { "key": "", "command": "workbench.action.zoomIn" },
  // { "key": "", "command": "workbench.action.zoomOut" },
  // { "key": "", "command": "workbench.action.zoomReset" },

  // { "key": "", "command": "editor.action.fontZoomIn" },
  // { "key": "", "command": "editor.action.fontZoomOut" },
  // { "key": "", "command": "editor.action.fontZoomReset" },

  // scroll by half pages
  { "key": "ctrl+up", "command": "editorScroll", "when": "textInputFocus", "args": { "to": "up", "by": "halfPage", "value": 1 } },
  { "key": "ctrl+down", "command": "editorScroll", "when": "textInputFocus", "args": { "to": "down", "by": "halfPage", "value": 1 } },

  // side views
  { "key": "alt+e", "command": "workbench.view.explorer" },
  { "key": "alt+shift+e", "command": "workbench.files.action.showActiveFileInExplorer" },
  { "key": "alt+g", "command": "workbench.view.scm" },
  { "key": "alt+t", "command": "test-explorer.focus" },
  { "key": "alt+x", "command": "workbench.view.extensions" },
  { "key": "alt+f", "command": "workbench.view.search" },
  { "key": "alt+d", "command": "workbench.view.debug" },

  // fold blocks
  { "key": "ctrl+1", "command": "editor.foldLevel1", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+2", "command": "editor.foldLevel2", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+3", "command": "editor.foldLevel3", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+4", "command": "editor.foldLevel4", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+5", "command": "editor.foldLevel5", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+6", "command": "editor.foldLevel6", "when": "editorTextFocus && foldingEnabled" },

  { "key": "alt+1", "command": "editor.fold", "when": "editorTextFocus && foldingEnabled" },
  { "key": "alt+2", "command": "editor.unfold", "when": "editorTextFocus && foldingEnabled" },
  { "key": "alt+3", "command": "editor.foldRecursively", "when": "editorTextFocus && foldingEnabled" },
  { "key": "alt+4", "command": "editor.unfoldRecursively", "when": "editorTextFocus && foldingEnabled" },

  // unfold
  { "key": "ctrl+0", "command": "editor.unfoldAll", "when": "editorTextFocus && foldingEnabled" },

  // find => jump
  { "key": "alt+j", "command": "findJump.activate", "when": "editorTextFocus" },
  { "key": "alt+shift+j", "command": "findJump.activateWithSelection", "when": "editorTextFocus" },
  { "key": "enter", "command": "findJump.goToFirstMatch", "when": "findJumpActive && editorTextFocus" },

  // unbindings
  { "key": "ctrl+q", "command": "-workbench.action.quit" },
  { "key": "ctrl++", "command": "-workbench.action.zoomIn" },
  { "key": "ctrl+-", "command": "-workbench.action.zoomOut" },

  { "key": "alt+n", "command": "workbench.action.compareEditor.nextChange" }
]
